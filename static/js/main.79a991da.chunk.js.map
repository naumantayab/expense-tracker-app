{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","className","IncomeExpenses","amounts","income","expense","Transaction","sign","text","Math","abs","onClick","TransactionList","AddTransaction","name","useState","expenseData","setExpenseData","postExpenseData","event","target","onSubmit","e","preventDefault","newTransaction","Date","getTime","toString","htmlFor","placeholder","onChange","required","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79a991da.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <>\r\n            <h2>Expense Tracker by Nauman Tayyab</h2>\r\n        </>\r\n    );\r\n}\r\n\r\n","export default (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"DELETE_TRANSACTION\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttransactions: state.transactions.filter(\r\n\t\t\t\t\t(transaction) => transaction.id !== action.payload\r\n\t\t\t\t),\r\n\t\t\t};\r\n\r\n\t\tcase \"ADD_TRANSACTION\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttransactions: [action.payload, ...state.transactions],\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t};\r\n}\r\n","import React, { createContext, useReducer } from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\n// const GlobalState = () => {\r\n// initial state\r\nconst initialState = {\r\n\ttransactions: [],\r\n};\r\n\r\n// Create Global context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n\tconst [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n\tconst deleteTransaction = (id) => {\r\n\t\tdispatch({\r\n\t\t\ttype: \"DELETE_TRANSACTION\",\r\n\t\t\tpayload: id,\r\n\t\t});\r\n\t}\r\n\r\n\tfunction addTransaction(transaction) {\r\n\t\tdispatch({\r\n\t\t\ttype: \"ADD_TRANSACTION\",\r\n\t\t\tpayload: transaction,\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<GlobalContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\ttransactions: state.transactions,\r\n\t\t\t\tdeleteTransaction,\r\n\t\t\t\taddTransaction,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</GlobalContext.Provider>\r\n\t);\r\n};\r\n// export default GlobalState;\r\n","import React, {useContext} from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState.js\";\r\n// import  transactions from './Transaction.js'\r\nexport const Balance = () => {\r\n\tconst { transactions } = useContext(GlobalContext);\r\n\r\n\tconst amounts = transactions.map(transaction => transaction.amount);\r\n\tconst total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2)\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<h4>Your Balance</h4>\r\n\t\t\t\t<h1 id=\"balance\">${total}</h1>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n","import React, {useContext} from 'react';\r\nimport { GlobalContext } from \"../context/GlobalState.js\";\r\n\r\nexport const IncomeExpenses = () => {\r\n\tconst {transactions} = useContext(GlobalContext);\r\n\r\n\tconst amounts = transactions.map(transaction => transaction.amount);\r\n\r\n\tconst income = amounts.filter(item => item>0)\r\n\t.reduce((acc, item) => (acc += item), 0)\r\n\t.toFixed(2);\r\n\r\n\tconst expense = (amounts.filter(item => item<0)\r\n\t.reduce((acc, item) => (acc += item), 0) * -1)\r\n\t.toFixed(2);\r\n\r\n    return (\r\n\t\t\t<>\r\n\t\t\t\t<div className=\"inc-exp-container\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h4>Income</h4>\r\n\t\t\t\t\t\t<p id=\"money-plus\" className=\"money plus\">\r\n\t\t\t\t\t\t\t${income}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h4>Expense</h4>\r\n\t\t\t\t\t\t<p id=\"money-minus\" className=\"money minus\">\r\n\t\t\t\t\t\t\t${expense}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nexport const Transaction = ({ transaction }) => {\r\n\tconst sign = transaction.amount < 0 ? \"-\" : \"+\";\r\n\tconst { deleteTransaction } = useContext(GlobalContext);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<li className={transaction.amount < 0 ? \"minus\" : \"plus\"}>\r\n\t\t\t\t{transaction.text}\r\n\t\t\t\t<span>\r\n\t\t\t\t\t{sign}${Math.abs(transaction.amount)}\r\n\t\t\t\t</span>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"delete-btn\"\r\n\t\t\t\t\tonClick={() => deleteTransaction(transaction.id)}\r\n\t\t\t\t>\r\n\t\t\t\t\tx\r\n\t\t\t\t</button>\r\n\t\t\t</li>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\n// export default Transaction;\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport { Transaction } from \"./Transaction\";\r\n\r\nexport const TransactionList = () => {\r\n\tconst { transactions } = useContext(GlobalContext);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3>Transaction History</h3>\r\n\t\t\t<ul id=\"list\" className=\"list\">\r\n\t\t\t\t{transactions.map((transaction) => (\r\n\t\t\t\t\t<Transaction key={transaction.id} transaction={transaction} />\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t</>\r\n\t);\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nexport const AddTransaction = () => {\r\n\tconst [expenseData, setExpenseData] = useState({\r\n\t\ttext: \"\",\r\n\t\tamount: \"\",\r\n\t});\r\n\r\n\tconst { text, amount } = expenseData;\r\n\r\n\tlet name, value;\r\n\tconst postExpenseData = (event) => {\r\n\t\tname = event.target.name;\r\n\t\tvalue = event.target.value;\r\n\r\n\t\tsetExpenseData({ ...expenseData, [name]: value });\r\n\t};\r\n\r\n\tconst { addTransaction } = useContext(GlobalContext);\r\n\r\n\tconst submitTransaction = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\t\tconst newTransaction = {\r\n\t\t\t\tid: new Date().getTime().toString(),\r\n\t\t\t\ttext,\r\n\t\t\t\tamount: +amount,\r\n\t\t\t};\r\n\t\t\taddTransaction(newTransaction);\r\n\r\n\t\t\tif (newTransaction) {\r\n\t\t\t\tsetExpenseData({\r\n\t\t\t\t\ttext: \"\",\r\n\t\t\t\t\tamount: \"\",\r\n\t\t\t\t});\r\n\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3>Add New Transaction</h3>\r\n\t\t\t<form onSubmit={submitTransaction}>\r\n\t\t\t\t<div className=\"form-control\">\r\n\t\t\t\t\t<label htmlFor=\"text\">Description</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"text\"\r\n\t\t\t\t\t\tid=\"text\"\r\n\t\t\t\t\t\tplaceholder=\"Detail of Transaction\"\r\n\t\t\t\t\t\tvalue={text}\r\n\t\t\t\t\t\tonChange={postExpenseData}\r\n\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-control\">\r\n\t\t\t\t\t<label htmlFor=\"amount\">\r\n\t\t\t\t\t\tTransaction Amount\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tname=\"amount\"\r\n\t\t\t\t\t\tid=\"amount\"\r\n\t\t\t\t\t\tplaceholder=\"Dollar Value of Transaction\"\r\n\t\t\t\t\t\tvalue={amount}\r\n\t\t\t\t\t\tonChange={postExpenseData}\r\n\t\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button className=\"btn\">\r\n\t\t\t\t\tAdd Transaction\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t</>\r\n\t);\r\n};\r\n","import React from \"react\";\nimport {Header} from \"./components/Header\";\nimport {Balance} from \"./components/Balance\";\nimport {IncomeExpenses} from \"./components/IncomeExpenses\";\nimport {TransactionList} from \"./components/TransactionList\";\nimport {AddTransaction} from \"./components/AddTransaction\";\nimport { GlobalProvider } from \"./context/GlobalState\";\n\nimport \"./App.css\";\n\nfunction App() {\n\treturn (\n\t\t<>\n\t\t\t<GlobalProvider>\n\t\t\t\t<Header />\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<Balance />\n\t\t\t\t\t<IncomeExpenses />\n\t\t\t\t\t<TransactionList />\n\t\t\t\t\t<AddTransaction />\n\t\t\t\t</div>\n\t\t\t</GlobalProvider>\n\t\t</>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<>\n\t\t<App />\n\t</>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}